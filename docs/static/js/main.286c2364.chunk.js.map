{"version":3,"sources":["components/Card.jsx","components/Cards.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","photo","lang","fcolor","scolor","className","style","background","src","alt","Cards","map","url","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLA0BeA,EArBF,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OACnC,OACE,sBACEC,UAAU,OACVC,MAAO,CACLC,WAAW,4BAAD,OAA8BJ,EAA9B,aAAyCC,EAAzC,MAHd,UAME,qBAAKI,IAAKP,EAAOQ,IAAI,aACrB,6BAAKP,QCkCIQ,EA7CD,WA4BZ,OACE,mCA5BW,CACX,CACE,KAAQ,SACR,IAAO,2CACP,OAAU,UACV,OAAU,WAEZ,CACE,KAAQ,OACR,IAAO,yCACP,OAAU,UACV,OAAU,WAEZ,CACE,KAAQ,QACR,IAAO,0CACP,OAAU,UACV,OAAU,WAEZ,CACE,KAAQ,OACR,IAAO,yCACP,OAAU,UACV,OAAU,YAOJC,KAAI,gBAAET,EAAF,EAAEA,KAAMU,EAAR,EAAQA,IAAKT,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,OAArB,OACR,cAAC,EAAD,CAEEH,MAAOW,EACPV,KAAMA,EACNC,OAAQA,EACRC,OAAQA,GAJHF,SC5BAW,EANH,WACV,OACE,cAAC,EAAD,KCQWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.286c2364.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = ({ photo, lang, fcolor, scolor }) => {\r\n  return (\r\n    <div\r\n      className=\"card\"\r\n      style={{\r\n        background: `linear-gradient(to left, ${fcolor}, ${scolor})`,\r\n      }}\r\n    >\r\n      <img src={photo} alt=\"lang.svg\" />\r\n      <h3>{lang}</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  lang: PropTypes.string,\r\n  photo: PropTypes.string,\r\n  fcolor: PropTypes.string,\r\n  scolor: PropTypes.string,\r\n};\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst Cards = () => {\r\n  const data = [\r\n    {\r\n      \"lang\": \"Python\",\r\n      \"url\": \"https://cdn.svgporn.com/logos/python.svg\",\r\n      \"fcolor\": \"#00c3ff\",\r\n      \"scolor\": \"#ffff1c\"\r\n    },\r\n    {\r\n      \"lang\": \"Java\",\r\n      \"url\": \"https://cdn.svgporn.com/logos/java.svg\",\r\n      \"fcolor\": \"#D31027\",\r\n      \"scolor\": \"#EA384D\"\r\n    },\r\n    {\r\n      \"lang\": \"React\",\r\n      \"url\": \"https://cdn.svgporn.com/logos/react.svg\",\r\n      \"fcolor\": \"#000428\",\r\n      \"scolor\": \"#004e92\"\r\n    },\r\n    {\r\n      \"lang\": \"Perl\",\r\n      \"url\": \"https://cdn.svgporn.com/logos/perl.svg\",\r\n      \"fcolor\": \"#cc2b5e\",\r\n      \"scolor\": \"#753a88\"\r\n    }\r\n  ];\r\n  \r\n  return (\r\n    <>\r\n     {\r\n       data.map(({lang, url, fcolor, scolor}) => (\r\n        <Card\r\n          key={lang}\r\n          photo={url}\r\n          lang={lang}\r\n          fcolor={fcolor}\r\n          scolor={scolor}\r\n        />\r\n       ))\r\n     }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Cards\r\n","import Cards from './components/Cards'\n\nconst App = () => {\n  return (\n    <Cards />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}